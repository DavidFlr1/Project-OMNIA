{
  "autorun": false,
  "terminals": [
    {
      "name": "Local",
      "description": "Terminal to run localhost",
      "command": "npm run dev",
      "icon": "vm",
      "color": "terminal.ansiGreen",
      "execute": false,
      "recycle": true,
      "focus": true
    },
    {
      "name": "Git",
      "split": "Local",
      "description": "Terminal to run git",
      "command": "git pull origin N",
      "color": "terminal.ansiBlue",
      "icon": "git-branch",
      "execute": false,
      "recycle": true
    },
    
    {
      "name": "Server",
      "description": "Terminal to execute the server",
      "color": "terminal.ansiCyan",
      "icon": "server-environment",
      "commands": [
        "cd minecraft-server",
        "docker compose up --build"
      ],
      "recycle": true
    },
    {
      "name": "Storage",
      "description": "Terminal to execute the storage server",
      "commands": [
        "cd storage-service",
        "python -m uvicorn src.main:app --reload --host 0.0.0.0 --port 8000"
      ],
      "color": "terminal.ansiRed",
      "icon": "database",
      "recycle": true,
      "_comments": {
        "Build and run": "docker build -t storage-service . ; docker run --name storage-service -p 8000:8000 storage-service",
        "For production": "docker stop storage-service 2>$null; docker rm storage-service 2>$null; docker build -t storage-service .; docker run --name storage-service -p 8000:8000 storage-service"
      }
    },
    {
      "name": "redis",
      "split": "Storage",
      "description": "Terminal to execute the redis server",
      "commands": [
        "docker run --name redis-memory -p 6379:6379 -d redis",
        "docker start redis-memory",
        "docker logs -f redis-memory"
      ],
      "color": "terminal.ansiMagenta",
      "icon": "debug-breakpoint-conditional-unverified",
      "recycle": true
    },
    {
      "name": "Governor",
      "description": "Terminal to execute the Governor",
      "commands": [
        "cd governor",
        "python -m uvicorn app.main:app --host 0.0.0.0 --port 5000"
      ],
      "color": "terminal.ansiBlack",
      "icon": "type-hierarchy",
      "recycle": true
    },

    {
      "name": "bot-1",
      "description": "Terminal to execute a bot agent",
      "commands": [
        "cd bot",
        "npm run dev:agent botName=Bob subPort=1"
      ],
      "color": "terminal.ansiGreen",
      "icon": "robot",
      "execute": false,
      "recycle": true
    },
    {
      "name": "bot-logic-1",
      "split": "bot-1",
      "description": "Terminal to execute the bot logic",
      "commands": [
        "cd bot",
        "npm run dev:logic subPort=1"
      ],
      "color": "terminal.ansiGreen",
      "icon": "robot",
      "execute": false,
      "recycle": true,
      "_comments": {
        "to run using python":"python -m uvicorn main:app --host 0.0.0.0 --port 4001"
      }
    },

    {
      "name": "bot-2",
      "description": "Terminal to execute a bot agent",
      "commands": [
        "cd bot",
        "npm run dev:agent botName=Tod subPort=2"
      ],
      "color": "terminal.ansiGreen",
      "icon": "robot",
      "execute": false,
      "recycle": true
    },
    {
      "name": "bot-logic-2",
      "split": "bot-2",
      "description": "Terminal to execute the bot logic",
      "commands": [
        "cd bot",
        "npm run dev:logic subPort=2"
      ],
      "color": "terminal.ansiGreen",
      "icon": "robot",
      "execute": false,
      "recycle": true
    }
  ]
}